package cz.ondrejsmetak.entity;

import cz.ondrejsmetak.tool.Helper;
import cz.ondrejsmetak.tool.Log;
import java.io.ByteArrayInputStream;
import java.security.cert.CertificateEncodingException;
import java.security.cert.CertificateException;
import java.security.cert.CertificateFactory;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Kdyz server posila svuj certifikat behem SSL/TLS handshake
 *
 *
 * @author Ondřej Směták <posta@ondrejsmetak.cz>
 */
public class ServerCertificate extends BasePayloadEntity {

	private Hex contentType;
	private Hex versionLayer;
	private Hex lengthLayer;

	private Hex handshakeType;
	private Hex lengthHandshake;

	private Hex lengthCertificates;

	public static ServerCertificateCheck NO_SERVER_CERTIFICATE = null;
	private final List<X509Certificate> certificates = new ArrayList<>();

	public ServerCertificate(byte[] bytes) {
		parse(bytes);
	}

	private void parse(byte[] bytes) {
		int i = 0;

		/*SSL/TLS layer*/
		contentType = new Hex(bytes[i++]);
		versionLayer = new Hex(bytes[i++], bytes[i++]);
		lengthLayer = new Hex(bytes[i++], bytes[i++]);

		/*Handshake protocol*/
		handshakeType = new Hex(bytes[i++]);
		lengthHandshake = new Hex(bytes[i++], bytes[i++], bytes[i++]);

		/*Certificates*/
		lengthCertificates = new Hex(bytes[i++], bytes[i++], bytes[i++]);
		int lengthCertificatesDec = Helper.hexToDec(lengthCertificates);

		while (lengthCertificatesDec > 0) {
			//cteme nespecifikovany pocet certifikatu v chainu

			Hex lengthCertificate = new Hex(bytes[i++], bytes[i++], bytes[i++]); //prvni 3 bajty vzdy velikost toho, co se bude cist
			int lengthCertificateDec = Helper.hexToDec(lengthCertificate);

			
			
			System.err.println("Ctu: " + Helper.toHexString(Arrays.copyOfRange(bytes, i, i + lengthCertificateDec)));
			//System.err.println("Delka: " + lengthCertificateDec);
			X509Certificate x509 = decodeCertificate(Arrays.copyOfRange(bytes, i, i + lengthCertificateDec));
			
			
			if (x509 != null) {
				certificates.add(x509);
				//System.err.println(x509.getSubjectX500Principal().getName());
				try {
					x509.getEncoded();
					//System.err.println(Helper.toHexString(x509.getEncoded()));
				} catch (CertificateEncodingException ex) {
					ex.printStackTrace();
					Logger.getLogger(ServerCertificate.class.getName()).log(Level.SEVERE, null, ex);
				}
			}

			i += lengthCertificateDec;

			lengthCertificatesDec -= 3;
			lengthCertificatesDec -= lengthCertificateDec;
		}
	}

	public void clearCertificates() {
		certificates.clear();
	}

	public void addCertificate(X509Certificate certificate) {
		certificates.add(certificate);
	}

	public int getCertificatesLength() throws CertificateEncodingException {
		int length = 0;

		for (X509Certificate certificate : certificates) {
			Hex c = new Hex(certificate.getEncoded());
			length += c.getLengthInDec();
		}

		return length;
	}

	public String getPrint() {
		StringBuilder sb = new StringBuilder();
		for (X509Certificate certificate : certificates) {
			sb.append(certificate.getSubjectX500Principal().getName());
		}

		return sb.toString();
	}

	public void hack() {
		clearCertificates();
		
		//jak funguje https://security.stackexchange.com/questions/79482/whats-the-purpose-of-server-key-exchange-when-using-ephemeral-diffie-hellman
		//server key exchange
		
		//is.ssos.cz
		//addCertificate(decodeCertificate(Helper.toByteArray
		
		//seznam
		addCertificate(decodeCertificate(Helper.toByteArray
		//addCertificate(decodeCertificate(Helper.toByteArray
		
		//lide.cz
		//addCertificate(decodeCertificate(Helper.toByteArray
		//addCertificate(decodeCertificate(Helper.toByteArray
		
		//centrum
		//addCertificate(decodeCertificate(Helper.toByteArray
		//addCertificate(decodeCertificate(Helper.toByteArray
	}

	public Hex toHex() throws CertificateEncodingException {
		/**
		 * Size of certificate + 3 bytes to store each certificate size
		 */
		int certificatesLength = getCertificatesLength() + (3 * certificates.size());

		StringBuilder sb = new StringBuilder();
		sb.append(contentType);
		sb.append(versionLayer);
		sb.append(new Hex(Helper.decToHex(certificatesLength + 7), 2));

		sb.append(handshakeType);
		sb.append(new Hex(Helper.decToHex(certificatesLength + 3), 3));

		sb.append(new Hex(Helper.decToHex(certificatesLength), 3));

		for (X509Certificate certificate : certificates) {
			Hex c = new Hex(certificate.getEncoded());
			sb.append(new Hex(c.getLengthInHex(), 3)); //length of single certificate
			sb.append(c.toString());
			
			//System.out.println("Pridavam certifikat: " + c.toString());
		}

		return new Hex(sb.toString());
	}

	private X509Certificate decodeCertificate(byte[] bytes) {
		try {
			CertificateFactory cf = CertificateFactory.getInstance("X.509");
			return (X509Certificate) cf.generateCertificate(new ByteArrayInputStream(bytes));
		} catch (CertificateException ex) {
			Log.debugException(ex);
			return null;
		}
	}

	public static ServerCertificateCheck isServerCerfificate(byte[] bytes) {
		//we need at least 6 bytes to determine
		if (bytes.length < 6) {
			return NO_SERVER_CERTIFICATE;
		}

		for (int i = 0; i < bytes.length; i++) {
			if (i + 5 >= bytes.length) { //out of bouds
				break;
			}

			Hex contentType = new Hex(bytes[i]);
			Hex versionLayer = new Hex(bytes[i + 1], bytes[i + 2]);
			Hex lengthLayer = new Hex(bytes[i + 3], bytes[i + 4]);
			int lengthLayerDec = Helper.hexToDec(lengthLayer);

			Hex handshakeType = new Hex(bytes[i + 5]);

			boolean found = contentType.equals(CONTENT_TYPE)
					&& getAllVersions().contains(versionLayer)
					&& handshakeType.equals(HANDSHAKE_TYPE_CERTIFICATE);

			if (found) {
				//+5 is size for contentType, versionLayer and LengthLayer
				return new ServerCertificateCheck(i, i + lengthLayerDec + 5);
				//return Arrays.copyOfRange(bytes, i, i + lengthLayerDec);
			}
		}

		return NO_SERVER_CERTIFICATE;
	}

	public static class ServerCertificateCheck {

		private int startIndex;
		private int endIndex;

		public ServerCertificateCheck(int startIndex, int endIndex) {
			this.startIndex = startIndex;
			this.endIndex = endIndex;
		}

		public int getStartIndex() {
			return startIndex;
		}

		public int getEndIndex() {
			return endIndex;
		}

		public int getLength() {
			return endIndex - startIndex;
		}

	}

}
